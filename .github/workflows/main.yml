name: Java Test Generation

on: [push]

jobs:
  tests:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        ci_node_total: [8]
        
        ci_node_index: [0, 1, 2, 3, 4, 5, 6, 7]
        
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
      
    - name: Setup JDK
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
      
    - name: Download Randoop and Emma
      run: |
            wget https://github.com/randoop/randoop/releases/download/v3.0.6/randoop-all-3.0.6.jar -P /home/runner/work/ParallelRandomTesting/ParallelRandomTesting
            
            wget https://sourceforge.net/projects/emma/files/emma-release/2.0.5312/emma-2.0.5312.zip -P /home/runner/work/ParallelRandomTesting/ParallelRandomTesting
      
    - name: Unzip Emma
      run: unzip /home/runner/work/ParallelRandomTesting/ParallelRandomTesting/emma-2.0.5312.zip -d /home/runner/work/ParallelRandomTesting/ParallelRandomTesting
      
    - name: Run emma and randoop
      run: |
            #!/bin/bash
            
            timestamp=${{ matrix.ci_node_index }}
            
            mkdir /home/runner/work/ParallelRandomTesting/ParallelRandomTesting/coverage_$timestamp
            
            #Instr emma
            java -noverify -classpath /home/runner/work/ParallelRandomTesting/ParallelRandomTesting/emma-2.0.5312/lib/emma.jar emma instr -m fullcopy -d /home/runner/work/ParallelRandomTesting/ParallelRandomTesting/coverage_$timestamp -ip /home/runner/work/ParallelRandomTesting/ParallelRandomTesting/jars/saxpath.jar -out coverage_$timestamp/coverage_$timestamp.em

            #Randoop
            java -noverify -classpath /home/runner/work/ParallelRandomTesting/ParallelRandomTesting/coverage_$timestamp/lib/saxpath.jar:/home/runner/work/ParallelRandomTesting/ParallelRandomTesting/emma-2.0.5312/lib/emma.jar:/home/runner/work/ParallelRandomTesting/ParallelRandomTesting/randoop-all-3.0.6.jar randoop.main.Main gentests --classlist=/home/runner/work/ParallelRandomTesting/ParallelRandomTesting/lista.txt --timelimit=4 --no-regression-tests=true --junit-output-dir=/home/runner/work/ParallelRandomTesting/ParallelRandomTesting/coverage_$timestamp
            
            cp coverage.ec /home/runner/work/ParallelRandomTesting/ParallelRandomTesting/coverage_$timestamp/coverage_$timestamp.ec
            rm coverage.ec
            
            #Emma report
            java -classpath /home/runner/work/ParallelRandomTesting/ParallelRandomTesting/emma-2.0.5312/lib/emma.jar emma report -r html  -Dreport.html.out.file=/home/runner/work/ParallelRandomTesting/ParallelRandomTesting/coverage_$timestamp/coverage_$timestamp.html  -in /home/runner/work/ParallelRandomTesting/ParallelRandomTesting/coverage_$timestamp/coverage_$timestamp.em,/home/runner/work/ParallelRandomTesting/ParallelRandomTesting/coverage_$timestamp/coverage_$timestamp.ec
            
            #Emma merge .em e .ec
            java -classpath /home/runner/work/ParallelRandomTesting/ParallelRandomTesting/emma-2.0.5312/lib/emma.jar emma merge -in  /home/runner/work/ParallelRandomTesting/ParallelRandomTesting/coverage_$timestamp/coverage_$timestamp.em,/home/runner/work/ParallelRandomTesting/ParallelRandomTesting/coverage_$timestamp/coverage_$timestamp.ec -out /home/runner/work/ParallelRandomTesting/ParallelRandomTesting/coverage_$timestamp/coverage_$timestamp.es
            
    - name: Upload Emma reports
      uses: actions/upload-artifact@v2
      with:
        name: Emma reports
        path: /home/runner/work/ParallelRandomTesting/ParallelRandomTesting/coverage_?
        
        
  #Job che si attiva al termine di tutte le sessioni di test
  
  merge:
   needs: tests
   runs-on: ubuntu-latest
   steps:
    - name: Checkout repository
      uses: actions/checkout@v2
      
    - name: Setup JDK
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
    
    - name: Download a single artifact
      uses: actions/download-artifact@v3
      with:
       name: Emma reports
       
    - name: Download Emma
      run: wget https://sourceforge.net/projects/emma/files/emma-release/2.0.5312/emma-2.0.5312.zip -P /home/runner/work/ParallelRandomTesting/ParallelRandomTesting
      
    - name: Unzip Emma
      run: unzip /home/runner/work/ParallelRandomTesting/ParallelRandomTesting/emma-2.0.5312.zip -d /home/runner/work/ParallelRandomTesting/ParallelRandomTesting
      
    - name: Emma merge
      run: |
            #!/bin/bash
            count=0
            for file in /home/runner/work/ParallelRandomTesting/ParallelRandomTesting/coverage_?/*.es
            do
             count2=$(($count+1))
             
             FILE=coverage_$count2/coverage_$count2.es
             if test -f "$FILE"; then

                  java -classpath /home/runner/work/ParallelRandomTesting/ParallelRandomTesting/emma-2.0.5312/lib/emma.jar emma merge -in coverage_$count/coverage_$count.es,coverage_$count2/coverage_$count2.es -out coverage_$count2/coverage_$count2.es
                  
                  count=$(($count+1)) 
             fi
            done
            
            cp /home/runner/work/ParallelRandomTesting/ParallelRandomTesting/coverage_$((count))/coverage_$((count)).es /home/runner/work/ParallelRandomTesting/ParallelRandomTesting/coveragemerge.es
 
            #Emma report finale
            java -classpath /home/runner/work/ParallelRandomTesting/ParallelRandomTesting/emma-2.0.5312/lib/emma.jar emma report -r html  -Dreport.html.out.file=/home/runner/work/ParallelRandomTesting/ParallelRandomTesting/coveragemerge/coveragemerge.html  -in /home/runner/work/ParallelRandomTesting/ParallelRandomTesting/coveragemerge.es
            java -classpath /home/runner/work/ParallelRandomTesting/ParallelRandomTesting/emma-2.0.5312/lib/emma.jar emma report -r xml  -Dreport.xml.out.file=/home/runner/work/ParallelRandomTesting/ParallelRandomTesting/coveragemerge/coveragemerge.xml  -in /home/runner/work/ParallelRandomTesting/ParallelRandomTesting/coveragemerge.es
            cp /home/runner/work/ParallelRandomTesting/ParallelRandomTesting/coverage_$((count))/coverage_$((count)).es /home/runner/work/ParallelRandomTesting/ParallelRandomTesting/coveragemerge/coveragemerge.es
            
    - name: Upload Emma reports
      uses: actions/upload-artifact@v2
      with:
        name: Coverage merge
        path: /home/runner/work/ParallelRandomTesting/ParallelRandomTesting/coveragemerge/*
  badge:
    needs: merge
    runs-on: ubuntu-latest
    env:
      MY_VAR: 0
    permissions:
      # Give the default GITHUB_TOKEN write permission to commit and push the
      # added or changed files to the repository.
      contents: write

    steps:
    - name: Checkout code
      uses: actions/checkout@v2
      
    - name: Download a single artifact
      uses: actions/download-artifact@v3
      with:
       name: Coverage merge
    - name: Download xmlstarlet
      run: |
            sudo apt-get update
            sudo apt-get install xmlstarlet
    
    - name: Coverage Line
      run: |
             MY_VAR=$(xmlstarlet sel -t -v "//coverage[@type='line, %']/@value" coveragemerge.xml | head -1)
             echo "MY_VAR=$MY_VAR" >> $GITHUB_ENV
    - name: Coverage Block
      run: |
             MY_VAR2=$(xmlstarlet sel -t -v "//coverage[@type='block, %']/@value" coveragemerge.xml | head -1)
             echo "MY_VAR2=$MY_VAR2" >> $GITHUB_ENV
    - name: Coverage Method
      run: |
             MY_VAR3=$(xmlstarlet sel -t -v "//coverage[@type='method, %']/@value" coveragemerge.xml | head -1)
             echo "MY_VAR3=$MY_VAR3" >> $GITHUB_ENV
    - name: Coverage Class
      run: |
             MY_VAR4=$(xmlstarlet sel -t -v "//coverage[@type='class, %']/@value" coveragemerge.xml | head -1)
             echo "MY_VAR4=$MY_VAR4" >> $GITHUB_ENV
            
    - name: Create the Badge 1
      uses: schneegans/dynamic-badges-action@v1.0.0
      with:
        auth: ${{ secrets.GIST_SECRET }}
        gistID: 99488398e05ca4ebe8bddedc60dbc49e
        filename: ParallelRandomTesting__${{ env.BRANCH }}.json
        schemaVersion: 1
        label: Coverage Line
        message: ${{ env.MY_VAR }}
        color: green
        namedLogo: github
    - name: Create the Badge 2
      uses: schneegans/dynamic-badges-action@v1.0.0
      with:
        auth: ${{ secrets.GIST_SECRET }}
        gistID: 99488398e05ca4ebe8bddedc60dbc49e
        filename: ParallelRandomTesting2__${{ env.BRANCH }}.json
        schemaVersion: 2
        label: Coverage Block
        message: ${{ env.MY_VAR2 }}
        color: green
        namedLogo: github
    - name: Create the Badge 3
      uses: schneegans/dynamic-badges-action@v1.0.0
      with:
        auth: ${{ secrets.GIST_SECRET }}
        gistID: 99488398e05ca4ebe8bddedc60dbc49e
        filename: ParallelRandomTesting3__${{ env.BRANCH }}.json
        schemaVersion: 3
        label: Coverage Method
        message: ${{ env.MY_VAR3 }}
        color: green
        namedLogo: github       
    - name: Create the Badge 4
      uses: schneegans/dynamic-badges-action@v1.0.0
      with:
        auth: ${{ secrets.GIST_SECRET }}
        gistID: 99488398e05ca4ebe8bddedc60dbc49e
        filename: ParallelRandomTesting4__${{ env.BRANCH }}.json
        schemaVersion: 4
        label: Coverage Class
        message: ${{ env.MY_VAR4 }}
        color: green
        namedLogo: github
    - name: directory 
      run: |
           #!/bin/bash
           mkdir -p /home/runner/work/ParallelRandomTesting/ParallelRandomTesting/merge/coverage
           cp coveragemerge.xml merge/coverage/coveragemerge.xml
    - uses: stefanzweifel/git-auto-commit-action@v4
      with:
        commit_message: Changed files
        file_pattern: merge/*

      
